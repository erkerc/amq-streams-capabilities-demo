oc apply -f amqs-kafka-cluster-listeners.yaml

oc get svc
oc get route

oc extract secret/amqs-cluster-cluster-ca-cert --keys=ca.crt --to=- >certificate.crt
openssl x509 -in certificate.crt -text

# Download consumer and producer jar files 
keytool -import -trustcacerts -alias root -file certificate.crt -keystore keystore.jks -storepass password -noprompt
wget -O log-consumer.jar https://github.com/RedHatWorkshops/workshop-amq-streams/blob/master/bin/log-consumer.jar?raw=true
wget -O timer-producer.jar https://github.com/RedHatWorkshops/workshop-amq-streams/blob/master/bin/timer-producer.jar?raw=true


# Get kafka bootstrap url
export AMQS_BROKER_BOOTSTRAP=`oc get route amqs-cluster-kafka-route-bootstrap -o jsonpath='{.spec.host}'`:443

# Run consumer
java -jar log-consumer.jar \
      --camel.component.kafka.configuration.brokers=$AMQS_BROKER_BOOTSTRAP \
      --camel.component.kafka.configuration.security-protocol=SSL \
      --camel.component.kafka.configuration.ssl-truststore-location=keystore.jks \
      --camel.component.kafka.configuration.ssl-truststore-password=password
# Run producer
java -jar timer-producer.jar \
      --camel.component.kafka.configuration.brokers=$AMQS_BROKER_BOOTSTRAP \
      --camel.component.kafka.configuration.security-protocol=SSL \
      --camel.component.kafka.configuration.ssl-truststore-location=keystore.jks \
      --camel.component.kafka.configuration.ssl-truststore-password=password --server.port=0

# Remove certifacate and keystore